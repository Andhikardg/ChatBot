import 'package:chat_gpt_sdk/chat_gpt_sdk.dart';
import 'package:dash_chat_2/dash_chat_2.dart';
import 'package:flutter/material.dart';

class ChatPage extends StatefulWidget {
  const ChatPage({super.key});

  @override
  State<ChatPage> createState() => _ChatPageState();
}

class _ChatPageState extends State<ChatPage> {
  final ChatUser _currentUser =
  ChatUser(id: '1', firstName: 'Telkom', lastName: 'Indonesia');

  final ChatUser _gptChatUser =
  ChatUser(id: '2', firstName: 'Chat', lastName: 'GPT');

  List<ChatMessage> _messages = <ChatMessage>[];
  List<ChatUser> _typingUsers = <ChatUser>[];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: const Color.fromRGBO(255, 255, 255, 1.0),
        title: const Text(
          'AI Telkom Indonesia',
          style: TextStyle(
            color: Colors.black,
          ),
        ),
        actions: [
          CustomToggle(), // Menambahkan CustomToggle di AppBar
        ],
      ),
      body: Column(
        children: [
          CustomToggle(), // Menambahkan CustomToggle di atas DashChat
          Expanded(
            child: DashChat(
              currentUser: _currentUser,
              typingUsers: _typingUsers,
              messageOptions: const MessageOptions(
                currentUserContainerColor: Colors.black,
                containerColor: Color.fromRGBO(0, 166, 126, 1),
                textColor: Colors.white,
              ),
              onSend: (ChatMessage m) {
                getChatResponse(m);
              },
              messages: _messages,
            ),
          ),
        ],
      ),
    );
  }

  Future<void> getChatResponse(ChatMessage m) async {
    setState(() {
      _messages.insert(0, m);
      _typingUsers.add(_gptChatUser);
    });

    List<Messages?> _messagesHistory = _messages.reversed.map((m) {
      if (m.user == _currentUser) {
        return Messages(role: Role.user, content: m.text);
      } else if (m.user == _gptChatUser) {
        return Messages(role: Role.assistant, content: m.text);
      }
    }).toList();

    // Uncomment and use the OpenAI instance with your API key and setup
    // final request = ChatCompleteText(
    //   model: Gpt4ChatModel,
    //   messages: _messagesHistory,
    //   maxToken: 200,
    // );
    // final response = await _openAI.onChatCompletion(request: request);
    // for (var element in response!.choices) {
    //   if (element.message != null) {
    //     setState(() {
    //       _messages.insert(
    //         0,
    //         ChatMessage(
    //           user: _gptChatUser,
    //           createdAt: DateTime.now(),
    //           text: element.message!.content,
    //         ),
    //       );
    //     });
    //   }
    // }

    setState(() {
      _typingUsers.remove(_gptChatUser);
    });
  }
}

class CustomToggle extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 10.0, vertical: 5.0),
      decoration: BoxDecoration(
        color: Colors.grey[200],
        borderRadius: BorderRadius.circular(20.0),
        boxShadow: [
          BoxShadow(
            color: Colors.black12,
            blurRadius: 4.0,
            offset: Offset(0, 2),
          ),
        ],
      ),
      child: Row(
        mainAxisSize: MainAxisSize.min,
        children: [
          Icon(Icons.menu, color: Colors.grey[800]),
          SizedBox(width: 10.0),
          Container(
            padding: EdgeInsets.all(5.0),
            decoration: BoxDecoration(
              color: Colors.grey[400],
              shape: BoxShape.circle,
            ),
            child: Icon(Icons.circle, size: 10.0, color: Colors.white),
          ),
          SizedBox(width: 10.0),
          Text(
            'GPT - 4o',
            style: TextStyle(
              color: Colors.black,
              fontWeight: FontWeight.bold,
            ),
          ),
          SizedBox(width: 10.0),
          Icon(Icons.edit, color: Colors.grey[800]),
        ],
      ),
    );
  }
}

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: ChatPage(),
    );
  }
}
